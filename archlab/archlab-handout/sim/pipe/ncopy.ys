#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	andq %rdx,%rdx		# len <= 0?
	jmp test

Loop0:
	mrmovq (%rdi), %r8
    mrmovq 8(%rdi), %r9
    mrmovq 16(%rdi), %r10
    mrmovq 24(%rdi), %r11
    mrmovq 32(%rdi), %r12
    mrmovq 40(%rdi), %r13

Loop1:
	rmmovq %r8, (%rsi)	# ...and store it to dst
	andq %r8, %r8		# val <= 0?
	jle Loop2
	iaddq $1, %rax		# count++

Loop2:
	rmmovq %r9, 8(%rsi)	# ...and store it to dst
	andq %r9, %r9    	# val <= 0?
	jle Loop3
	iaddq $1, %rax		# count++

Loop3:
	rmmovq %r10, 16(%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Loop4
	iaddq $1, %rax		# count++

Loop4:
	rmmovq %r11, 24(%rsi)	# ...and store it to dst
	andq %r11, %r11		# val <= 0?
	jle Loop5
	iaddq $1, %rax		# count++

Loop5:
	rmmovq %r12, 32(%rsi)	# ...and store it to dst
	andq %r12, %r12		# val <= 0?
	jle Loop6
	iaddq $1, %rax		# count++

Loop6:
	rmmovq %r13, 40(%rsi)	# ...and store it to dst
	iaddq $48, %rdi
	iaddq $48, %rsi
	andq %r13, %r13 	# val <= 0?
	jle test
	iaddq $1, %rax		# count++

test:
	iaddq $-6, %rdx
	jge Loop0
	iaddq $-8, %rdi
	iaddq $-8, %rsi
	iaddq $6, %rdx
	jmp Npos

Loop:	
	mrmovq (%rdi), %rcx	# read val from src...
	rmmovq %rcx, (%rsi)	# ...and store it to dst
	andq %rcx, %rcx		# val <= 0?
	jle Npos		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos:	
	iaddq $-1, %rdx		# len--
	iaddq $8, %rdi		# src++
	iaddq $8, %rsi		# dst++
	andq %rdx,%rdx		# len > 0?
	jge Loop			# if so, goto Loop:


##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
